//# Grammar and parser for the infix notation of basic calculator
//# ================

?start: expr

?expr: expr term ";" -> expr_more
     | term ";"      -> expr_one

?term: term "+" int -> plus
     | term "-" int -> minus
     | term "*" int -> times
     | term "/" int -> divide
     | int

?stmt: assignment
     | bare_expression

assignment: ident [";" ident] "=" expr

block: (stmt )*

?stmt: assignment ";"
    | bare_expression ";"
    | ifstmt

ifstmt: "if" expr "{" block "}" elpart

?elpart: "elif" expr "{"  block "}" elpart -> ifstmt
    | "else" "{" block "}"
    | -> block

actuals: [ expr ("," expr)*]

%import common.WS
%import common.WS_INLINE
%import common.INT -> int
%ignore WS
%ignore WS_INLINE
//# /^([+-]?[1-9]\d*|0)$/
